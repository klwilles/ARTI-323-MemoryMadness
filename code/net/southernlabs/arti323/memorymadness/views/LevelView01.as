package net.southernlabs.arti323.memorymadness.views {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import net.southernlabs.arti323.memorymadness.config.GameConfig;		public class LevelView01 extends MovieClip {				private var firstCard:Card;		private var secondCard:Card;				public function LevelView01() {			// constructor code			trace("LevelView01 instantiated");						//make a list of card numbers			var cardlist:Array = new Array();			for(var i:uint=0; i<GameConfig.BOARD_WIDTH * GameConfig.BOARD_HEIGHT/2; i++) {				cardlist.push(i);				cardlist.push(i);			}						for(var row:uint=0; row<GameConfig.BOARD_WIDTH; row++) { //horizontal				for(var col:uint=0; col<GameConfig.BOARD_HEIGHT; col++) { //vertical										var c:Card = new Card();					c.x = row * GameConfig.CARD_HORIZONTAL_SPACING + GameConfig.BOARD_OFFSET_X; 					c.y = col * GameConfig.CARD_VERTICAL_SPACING + GameConfig.BOARD_OFFSET_Y;					var r:uint = Math.floor(Math.random()*cardlist.length); //get a random face					c.setFrameNumber(cardlist[r]); //assign face to card					cardlist.splice(r,1); //remove face from list					c.addEventListener(MouseEvent.CLICK,clickCard);					addChild(c); //show the card				}			}		}		public function clickCard(event:MouseEvent) 		{			var thisCard:Card = (event.currentTarget as Card); //what card?			trace("you clicked on card at frame num:"+event.currentTarget.getFrameNumber());			//event.currentTarget.flip();						if (firstCard == null) 			{				trace("this card is null");				firstCard = thisCard; //note it				firstCard.flip(); //turn it over			} 						else if (firstCard == thisCard) 			{				trace("firstCard equals thisCard");				firstCard.gotoAndStop(1); //turn back over				firstCard = null;			} 						else if (secondCard == null) 			{ //second card in a pair				secondCard = thisCard; //note it				secondCard.flip(); //turn it over								//compare two cards				if (firstCard.getFrameNumber() == secondCard.getFrameNumber()) 				{					//remove a match					removeChild(firstCard);					removeChild(secondCard);					//reset selection					firstCard = null;					secondCard = null;				} 								else 				{   					//starting to pick another pair					//reset previous pair					firstCard.gotoAndStop(1);					secondCard.gotoAndStop(1);					//secondCard = null;					//select first card in next pair					firstCard = thisCard;					firstCard.gotoAndStop(1); //thisCard.cardface+2);				}			}							}							}	}/* package {	import flash.display.*;		public class MatchingGame5 extends MovieClip {				import flash.events.*;				//game constants		private static const boardWidth:uint = 6;		private static const boardHeight:uint = 6;		private static const cardHorizontalSpacing:Number = 60;		private static const cardVerticalSpacing:Number = 60;		private static const boardOffsetX:Number = 100;		private static const boardOffsetY:Number = 35;												public function MatchingGame5():void {						//make a list of card numbers			var cardlist:Array = new Array();			for(var i:uint=0;i<boardWidth*boardHeight/2;i++) {				cardlist.push(i);				cardlist.push(i);			}						for(var x:uint=0;x<boardWidth;x++) { //horizontal				for(var y:uint=0;y<boardHeight;y++) { //vertical										var c:Card = new Card(); //copy the movie clip										c.stop();// stop on first frame										c.x = x*cardHorizontalSpacing+boardOffsetX; // set position										c.y = y*cardVerticalSpacing+boardOffsetY;										var r:uint = Math.floor(Math.random()*cardlist.length); //get a random face										c.cardface = cardlist[r]; //assign face to card										cardlist.splice(r,1); //remove face from list										//c.gotoAndStop(c.cardface+2);										c.addEventListener(MouseEvent.CLICK,clickCard);										addChild(c); //show the card				}			}		}	}} */